{"version":3,"sources":["utils/Loader.module.css","service/service.js","redux/reducer.js","utils/Alert.js","components/Header.js","components/ForecatHour.js","components/Forecast.js","components/CityItem.js","utils/Loader.js","components/SearchedCitiesList.js","App.js","reportWebVitals.js","redux/store.js","index.js","components/Forecast.module.css"],"names":["module","exports","Service","id","weather","forecast","Promise","all","fetch","response","res1","res2","ok","json","initialState","currentWeather","name","description","temp","wind","humidity","pressure","icon","iconCode","searchedCities","window","localStorage","getItem","JSON","parse","loading","alert","error","getWeatherThunk","createAsyncThunk","a","getWeatherData","console","log","weatherSlice","createSlice","reducers","getWeather","state","action","payload","deleteCity","setItem","stringify","extraReducers","builder","addCase","pending","fulfilled","data1","data2","cod","currentDate","Date","date","getDay","getDate","getMonth","sunset","sys","toLocaleTimeString","slice","sunrise","country","main","highestTemp","temp_max","lowestTemp","temp_min","speed","clouds","list","actions","Alert","text","className","role","Header","useState","setText","dispatch","useDispatch","useSelector","reducer","buttonHandler","e","preventDefault","onSubmit","type","value","placeholder","onChange","target","style","backgroundColor","border","ForecastHour","month","day","hour","iconUrl","s","cardItem","width","cardImg","src","alt","listItem","toUpperCase","Forecast","isModalOpen","onCloseModal","isOpen","show","forecasts","map","item","Math","floor","dt_txt","dt","onClick","CityItem","showModal","marginBottom","marginTop","onDelete","aria-label","aria-hidden","Loader","position","lds_ellipsis","SearchedList","Object","values","lenght","reverse","i","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.703ad653.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"Loader_position__2MPw1\",\"lds_ellipsis\":\"Loader_lds_ellipsis__hmAlb\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__2yOT7\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__2zSDJ\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__1X2Wz\"};","class Service {\r\n  static async getWeatherData(id) {\r\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\r\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\r\n\r\n    const response = await Promise.all([fetch(weather), fetch(forecast)]);\r\n\r\n    try {\r\n      const [res1, res2] = response;\r\n      if (res1.ok && res2.ok) {\r\n        return Promise.all([res1.json(), res2.json()]);\r\n      }\r\n    } catch {\r\n      return 'Not found';\r\n    }\r\n  }\r\n}\r\n\r\nexport default Service;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport Service from '../service/service';\r\n\r\nconst initialState = {\r\n  currentWeather: {\r\n    name: 'Chegem',\r\n    description: null,\r\n    temp: 10,\r\n    wind: 0,\r\n    humidity: 0,\r\n    pressure: 0,\r\n    icon: null,\r\n    iconCode: '',\r\n    id: null,\r\n  },\r\n  searchedCities: window.localStorage.getItem('listOfCities')\r\n    ? JSON.parse(window.localStorage.getItem('listOfCities'))\r\n    : {},\r\n  loading: false,\r\n  alert: false,\r\n  error: '',\r\n};\r\n\r\nexport const getWeatherThunk = createAsyncThunk(\r\n  'weather/getWeatherThunk',\r\n  async (id) => {\r\n    const response = Service.getWeatherData(id);\r\n    console.log(response);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst weatherSlice = createSlice({\r\n  name: 'weather',\r\n  initialState,\r\n  reducers: {\r\n    getWeather(state, action) {\r\n      state.currentWeather.name = action.payload.name;\r\n      state.currentWeather.temp = action.payload.temp;\r\n    },\r\n    deleteCity(state, action) {\r\n      delete state.searchedCities[action.payload];\r\n      window.localStorage.setItem(\r\n        'listOfCities',\r\n        JSON.stringify(state.searchedCities)\r\n      );\r\n      console.log(state.searchedCities);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getWeatherThunk.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getWeatherThunk.fulfilled, (state, action) => {\r\n        if (!action.payload) {\r\n          state.loading = false;\r\n          state.alert = true;\r\n          state.error =\r\n            'Пожалуйста введите корректное название города для поиска.';\r\n          return state;\r\n        }\r\n        const [data1, data2] = action.payload;\r\n        if (data1.cod === '400' || !data1) {\r\n          state.loading = false;\r\n          state.alert = true;\r\n          state.error =\r\n            'Пустой ввод. Пожалуйста введите название города для поиска.';\r\n          return state;\r\n        }\r\n\r\n        if (data1.cod === '404') {\r\n          state.loading = false;\r\n          state.alert = true;\r\n          state.error = 'Город не найден';\r\n          return state;\r\n        }\r\n\r\n        console.log(action.payload);\r\n        if (data1.cod !== '400') {\r\n          const months = [\r\n            'Январь',\r\n            'Февраль',\r\n            'Март',\r\n            'Апрель',\r\n            'Май',\r\n            'Июнь',\r\n            'Июль',\r\n            'Август',\r\n            'Сентябрь',\r\n            'Октябрь',\r\n            'Ноябрь',\r\n            'Декабрь',\r\n          ];\r\n          const days = [\r\n            'Воскресенье',\r\n            'Понедельник',\r\n            'Вторник',\r\n            'Среда',\r\n            'Четверг',\r\n            'Пятница',\r\n            'Суббота',\r\n          ];\r\n          const currentDate = new Date();\r\n          const date = `${\r\n            days[currentDate.getDay()]\r\n          } ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\r\n          const sunset = new Date(data1.sys.sunset * 1000)\r\n            .toLocaleTimeString()\r\n            .slice(0, 5);\r\n          const sunrise = new Date(data1.sys.sunrise * 1000)\r\n            .toLocaleTimeString()\r\n            .slice(0, 5);\r\n          state.currentWeather = {\r\n            ...state.currentWeather,\r\n            name: data1.name,\r\n            country: data1.sys.country,\r\n            temp: data1.main.temp,\r\n            highestTemp: data1.main.temp_max,\r\n            lowestTemp: data1.main.temp_min,\r\n            wind: data1.wind.speed,\r\n            description: data1.weather[0].description,\r\n            humidity: data1.main.humidity,\r\n            pressure: data1.main.pressure,\r\n            iconCode: data1.weather[0].icon,\r\n            id: data1.id,\r\n            clouds: data1.clouds.all,\r\n            sunrise,\r\n            sunset,\r\n            date,\r\n            forecast: data2.list,\r\n          };\r\n\r\n          state.searchedCities[data1.id] = state.currentWeather;\r\n          state.alert = false;\r\n          localStorage.setItem(\r\n            'listOfCities',\r\n            JSON.stringify(state.searchedCities)\r\n          );\r\n        }\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { getWeather, deleteCity } = weatherSlice.actions;\r\nexport default weatherSlice.reducer;\r\n","export const Alert = ({ text }) => {\r\n  return (\r\n    <div className=\"alert alert-info\" role=\"alert\">\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getWeatherThunk } from '../redux/reducer';\r\nimport { Alert } from '../utils/Alert';\r\n\r\nexport const Header = () => {\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n  const alert = useSelector((state) => state.reducer.alert);\r\n  const error = useSelector((state) => state.reducer.error);\r\n\r\n  const inputHandler = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const buttonHandler = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(getWeatherThunk(text));\r\n    setText('');\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={buttonHandler}>\r\n        {alert ? <Alert text={error} /> : null}\r\n\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            value={text}\r\n            name=\"title\"\r\n            placeholder=\"Город\"\r\n            onChange={inputHandler}\r\n          />\r\n\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-info\"\r\n              type=\"submit\"\r\n              style={{ backgroundColor: '#b690da', border: '#b690da' }}\r\n            >\r\n              Поиск\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import s from './Forecast.module.css';\r\n\r\nexport const ForecastHour = ({\r\n  temp,\r\n  month,\r\n  day,\r\n  hour,\r\n  icon,\r\n  pressure,\r\n  description,\r\n}) => {\r\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={'card text-white mb-3 ' + s.cardItem}\r\n        style={{ width: 18 + 'rem' }}\r\n      >\r\n        <div className=\"card-body mb-3\">\r\n          <h5 className=\"card-title\">\r\n            Дата - {day}.{month}\r\n          </h5>\r\n          <img className={s.cardImg} src={iconUrl} alt={temp} />\r\n\r\n          {/* <p class=\"card-text\">\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </p> */}\r\n        </div>\r\n        <ul className={'list-group list-group-flush ' + s.listItem}>\r\n          <li className=\"list-group-item\">{hour}:00</li>\r\n          <li className=\"list-group-item\">\r\n            {description[0].toUpperCase() + description.slice(1)}\r\n          </li>\r\n          <li className=\"list-group-item\">Температура: {temp} °C</li>\r\n          <li className=\"list-group-item\">Давление: {pressure} мм. рт. ст.</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ForecastHour } from './ForecatHour';\r\nimport s from './Forecast.module.css';\r\n\r\nexport const Forecast = ({ forecast, isModalOpen, name, onCloseModal }) => {\r\n  let isOpen = isModalOpen ? s.show : '';\r\n  const forecasts = forecast.map((item) => {\r\n    return (\r\n      <ForecastHour\r\n        key={item.dt}\r\n        temp={Math.floor(item.main.temp * 1) / 1}\r\n        pressure={item.main.pressure}\r\n        description={item.weather[0].description}\r\n        icon={item.weather[0].icon}\r\n        month={item.dt_txt.slice(5, 7)}\r\n        day={item.dt_txt.slice(8, 10)}\r\n        hour={item.dt_txt.slice(11, 13) * 1}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={'modal ' + isOpen} onClick={() => onCloseModal()}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            Прогноз погоды в городе {name}\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => onCloseModal()}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"row shadow-lg p-3 mb-5 rounded\">{forecasts}</div>{' '}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteCity } from '../redux/reducer';\r\nimport { Forecast } from './Forecast';\r\n\r\nexport const CityItem = ({\r\n  name,\r\n  country,\r\n  date,\r\n  temp,\r\n  highestTemp,\r\n  lowestTemp,\r\n  description,\r\n  wind,\r\n  humidity,\r\n  pressure,\r\n  icon,\r\n  sunrise,\r\n  sunset,\r\n  clouds,\r\n  forecast,\r\n  id,\r\n}) => {\r\n  const [isModalOpen, showModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const onDelete = (id) => {\r\n    dispatch(deleteCity(id));\r\n  };\r\n  const onCloseModal = () => {\r\n    return showModal(false);\r\n  };\r\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n  return (\r\n    <>\r\n      <Forecast\r\n        isModalOpen={isModalOpen}\r\n        forecast={forecast}\r\n        name={name}\r\n        onCloseModal={onCloseModal}\r\n      />\r\n      <div className=\"col-sm-6 shadow-lg p-3 mb-5 rounded\">\r\n        <div\r\n          className=\"card\"\r\n          style={{ marginBottom: '15px', marginTop: '15px' }}\r\n        >\r\n          <h5 className=\"card-header\">\r\n            {name} {country}\r\n            <button\r\n              onClick={() => onDelete(id)}\r\n              style={{ width: '40px' }}\r\n              type=\"button\"\r\n              className=\"close float-right\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </h5>\r\n\r\n          <div className=\"card-body\">\r\n            <img src={iconUrl} alt={description} />\r\n            <blockquote className=\"blockquote mb-0\">\r\n              <p> Температура: {temp} °C</p>\r\n              <footer className=\"blockquote-footer\">\r\n                {description[0].toUpperCase() + description.slice(1)}\r\n              </footer>\r\n\r\n              <footer className=\"blockquote-footer\">Дата: {date}</footer>\r\n\r\n              <footer className=\"blockquote-footer\">\r\n                Максимальная температура: {highestTemp} °C\r\n              </footer>\r\n              <footer className=\"blockquote-footer\">\r\n                Минимальная температура: {lowestTemp} °C\r\n              </footer>\r\n\r\n              <footer className=\"blockquote-footer\">\r\n                Cкорость ветра - {wind} м/с,\r\n              </footer>\r\n              <footer className=\"blockquote-footer\">\r\n                Влажность - {humidity} %\r\n              </footer>\r\n              <footer className=\"blockquote-footer\">\r\n                Давление - {pressure} мм рт.\r\n              </footer>\r\n              <footer className=\"blockquote-footer\">\r\n                Облачность - {clouds}.\r\n              </footer>\r\n\r\n              <footer className=\"blockquote-footer\">\r\n                Восход солнца - {sunrise}.\r\n              </footer>\r\n              <footer className=\"blockquote-footer\">\r\n                Закат солнца - {sunset}.\r\n              </footer>\r\n            </blockquote>\r\n            <hr />\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              style={{ backgroundColor: '#b8b3dd', border: '#b8b3dd' }}\r\n              onClick={() => showModal(true)}\r\n            >\r\n              Открыть прогноз\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import s from './Loader.module.css';\r\n\r\nlet Loader = () => {\r\n  return (\r\n    <div className={s.position}>\r\n      <div className={s.lds_ellipsis}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useSelector } from 'react-redux';\r\nimport { CityItem } from './CityItem';\r\nimport Loader from '../utils/Loader';\r\n\r\nexport const SearchedList = () => {\r\n  const list = useSelector((state) =>\r\n    Object.values(state.reducer.searchedCities)\r\n  );\r\n  const loader = useSelector((state) => state.reducer.loading);\r\n\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (!list || list.lenght === 0) {\r\n    return <h2>No data</h2>;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row p-3 mb-5 rounded\">\r\n        {list.reverse().map((i) => {\r\n          return (\r\n            <CityItem\r\n              name={i.name}\r\n              country={i.country}\r\n              date={i.date}\r\n              description={i.description}\r\n              temp={i.temp}\r\n              highestTemp={i.highestTemp}\r\n              lowestTemp={i.lowestTemp}\r\n              wind={i.wind}\r\n              humidity={i.humidity}\r\n              pressure={i.pressure}\r\n              icon={i.iconCode}\r\n              clouds={i.clouds}\r\n              sunrise={i.sunrise}\r\n              sunset={i.sunset}\r\n              id={i.id}\r\n              forecast={i.forecast}\r\n              key={Math.random() * 100}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import './App.css';\nimport { useSelector } from 'react-redux';\nimport { Header } from './components/Header';\nimport { SearchedList } from './components/SearchedCitiesList';\n\nfunction App() {\n  const data = useSelector((state) => state.reducer.currentWeather);\n\n  const { name } = data;\n\n  return (\n    <>\n      <div className=\"container\">\n        <h3 className=\"App\">Hello, {name}</h3>\n        <Header />\n        <SearchedList />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    reducer,\r\n  },\r\n});\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"Forecast_show__5K-2h\",\"cardItem\":\"Forecast_cardItem__2b08m\",\"cardImg\":\"Forecast_cardImg__1yAqZ\",\"listItem\":\"Forecast_listItem__3UUxM\"};"],"sourceRoot":""}