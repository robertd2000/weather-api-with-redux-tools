{"version":3,"sources":["utils/Loader.module.css","service/service.js","redux/reducer.js","utils/Alert.js","components/Header.js","components/CityItem.js","utils/Loader.js","components/SearchedCitiesList.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","Service","id","fetch","response","json","initialState","currentWeather","name","description","temp","wind","humidity","pressure","icon","iconCode","searchedCities","window","localStorage","getItem","JSON","parse","loading","alert","error","getWeatherThunk","createAsyncThunk","a","getWeatherData","weatherSlice","createSlice","reducers","getWeather","state","action","payload","deleteCity","setItem","stringify","console","log","extraReducers","builder","addCase","pending","fulfilled","cod","main","speed","weather","actions","Alert","text","className","role","Header","useState","setText","dispatch","useDispatch","useSelector","reducer","buttonHandler","e","preventDefault","onSubmit","type","value","placeholder","onChange","target","CityItem","style","marginBottom","marginTop","onClick","onDelete","width","aria-label","aria-hidden","Loader","s","position","lds_ellipsis","SearchedList","list","Object","values","lenght","reverse","map","i","Math","random","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e59b26e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"Loader_position__2MPw1\",\"lds_ellipsis\":\"Loader_lds_ellipsis__hmAlb\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__2yOT7\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__2zSDJ\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__1X2Wz\"};","class Service {\r\n  static async getWeatherData(id) {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`\r\n    );\r\n    try {\r\n      return response.json();\r\n    } catch {\r\n      return 'Not found';\r\n    }\r\n  }\r\n}\r\n\r\nexport default Service;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport Service from '../service/service';\r\n\r\nconst initialState = {\r\n  currentWeather: {\r\n    name: 'Chegem',\r\n    description: null,\r\n    temp: 10,\r\n    wind: 0,\r\n    humidity: 0,\r\n    pressure: 0,\r\n    icon: null,\r\n    iconCode: '',\r\n    id: null,\r\n  },\r\n  searchedCities: window.localStorage.getItem('listOfCities')\r\n    ? JSON.parse(window.localStorage.getItem('listOfCities'))\r\n    : {},\r\n  loading: false,\r\n  alert: false,\r\n  error: '',\r\n};\r\n\r\nexport const getWeatherThunk = createAsyncThunk(\r\n  'weather/getWeatherThunk',\r\n  async (id) => {\r\n    const response = Service.getWeatherData(id);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst weatherSlice = createSlice({\r\n  name: 'weather',\r\n  initialState,\r\n  reducers: {\r\n    getWeather(state, action) {\r\n      state.currentWeather.name = action.payload.name;\r\n      state.currentWeather.temp = action.payload.temp;\r\n    },\r\n    deleteCity(state, action) {\r\n      delete state.searchedCities[action.payload];\r\n      window.localStorage.setItem(\r\n        'listOfCities',\r\n        JSON.stringify(state.searchedCities)\r\n      );\r\n      console.log(state.searchedCities);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getWeatherThunk.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getWeatherThunk.fulfilled, (state, action) => {\r\n        if (action.payload.cod === '400') {\r\n          state.loading = false;\r\n          state.alert = true;\r\n          state.error =\r\n            'Пустой ввод. Пожалуйста введите название города для поиска.';\r\n\r\n          return state;\r\n        }\r\n\r\n        if (action.payload.cod === '404') {\r\n          state.loading = false;\r\n          state.alert = true;\r\n          state.error = 'Город не найден';\r\n\r\n          return state;\r\n        }\r\n\r\n        if (action.payload.cod !== '400') {\r\n          state.currentWeather = {\r\n            ...state.currentWeather,\r\n            name: action.payload.name,\r\n            temp: action.payload.main.temp,\r\n            wind: action.payload.wind.speed,\r\n            description: action.payload.weather[0].description,\r\n            humidity: action.payload.main.humidity,\r\n            pressure: action.payload.main.pressure,\r\n            iconCode: action.payload.weather[0].icon,\r\n            id: action.payload.id,\r\n          };\r\n          // const temp = Math.floor(action.payload.main.temp - 273);\r\n          // const name = action.payload.name;\r\n          // const weather = action.payload.weather[0].description;\r\n          // const wind = action.payload.wind.speed;\r\n          // const humidity = action.payload.main.humidity;\r\n          // const pressure = action.payload.main.pressure;\r\n          // state.currentWeather['name'] = name;\r\n          // state.currentWeather['temp'] = temp;\r\n          // state.currentWeather['description'] = weather;\r\n          // state.currentWeather['wind'] = wind;\r\n          // state.currentWeather['humidity'] = humidity;\r\n          // state.currentWeather['pressure'] = pressure;\r\n\r\n          // state.searchedCities.unshift(state.currentWeather);\r\n          state.searchedCities[action.payload.id] = state.currentWeather;\r\n\r\n          state.alert = false;\r\n\r\n          localStorage.setItem(\r\n            'listOfCities',\r\n            JSON.stringify(state.searchedCities)\r\n          );\r\n        }\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { getWeather, deleteCity } = weatherSlice.actions;\r\nexport default weatherSlice.reducer;\r\n","export const Alert = ({ text }) => {\r\n  return (\r\n    <div className=\"alert alert-info\" role=\"alert\">\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getWeatherThunk } from '../redux/reducer';\r\nimport { Alert } from '../utils/Alert';\r\n\r\nexport const Header = () => {\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n  const alert = useSelector((state) => state.reducer.alert);\r\n  const error = useSelector((state) => state.reducer.error);\r\n\r\n  const inputHandler = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const buttonHandler = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(getWeatherThunk(text));\r\n    setText('');\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={buttonHandler}>\r\n        {alert ? <Alert text={error} /> : null}\r\n\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            value={text}\r\n            name=\"title\"\r\n            placeholder=\"Город\"\r\n            onChange={inputHandler}\r\n          />\r\n\r\n          <div className=\"input-group-append\">\r\n            <button className=\"btn btn-secondary\" type=\"submit\">\r\n              Поиск\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { deleteCity } from '../redux/reducer';\r\n\r\nexport const CityItem = ({\r\n  name,\r\n  temp,\r\n  description,\r\n  wind,\r\n  humidity,\r\n  pressure,\r\n  icon,\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const onDelete = (id) => {\r\n    dispatch(deleteCity(id));\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"card\" style={{ marginBottom: '15px', marginTop: '15px' }}>\r\n        <h5 className=\"card-header\">\r\n          {name}\r\n          <button\r\n            onClick={() => onDelete(id)}\r\n            style={{ width: '40px' }}\r\n            type=\"button\"\r\n            className=\"close float-right\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </h5>\r\n\r\n        <div className=\"card-body\">\r\n          {/* <img src={icon} /> */}\r\n          <blockquote className=\"blockquote mb-0\">\r\n            <p> Температура: {temp} °C</p>\r\n            <footer className=\"blockquote-footer\">{description}</footer>\r\n            <footer className=\"blockquote-footer\">\r\n              cкорость ветра - {wind} м/с,\r\n            </footer>\r\n            <footer className=\"blockquote-footer\">\r\n              Влажность - {humidity} %\r\n            </footer>\r\n            <footer className=\"blockquote-footer\">\r\n              Давление - {pressure} мм рт.\r\n            </footer>\r\n          </blockquote>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import s from './Loader.module.css';\r\n\r\nlet Loader = () => {\r\n  return (\r\n    <div className={s.position}>\r\n      <div className={s.lds_ellipsis}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useSelector } from 'react-redux';\r\nimport { CityItem } from './CityItem';\r\nimport Loader from '../utils/Loader';\r\n\r\nexport const SearchedList = () => {\r\n  const list = useSelector((state) =>\r\n    Object.values(state.reducer.searchedCities)\r\n  );\r\n  const loader = useSelector((state) => state.reducer.loading);\r\n\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (!list || list.lenght === 0) {\r\n    return <h2>No data</h2>;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      {list.reverse().map((i) => {\r\n        return (\r\n          <CityItem\r\n            name={i.name}\r\n            description={i.description}\r\n            temp={i.temp}\r\n            wind={i.wind}\r\n            humidity={i.humidity}\r\n            pressure={i.pressure}\r\n            icon={i.icon}\r\n            id={i.id}\r\n            key={Math.random() * 100}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import './App.css';\nimport { useSelector } from 'react-redux';\nimport { Header } from './components/Header';\nimport { SearchedList } from './components/SearchedCitiesList';\n\nfunction App() {\n  const data = useSelector((state) => state.reducer.currentWeather);\n\n  const { name, icon } = data;\n  console.log(data);\n  return (\n    <>\n      <div className=\"container\">\n        <h3 className=\"App\">Hello, {name}</h3>\n        <Header />\n        <SearchedList />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    reducer,\r\n  },\r\n});\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}