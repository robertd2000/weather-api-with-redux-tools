{"ast":null,"code":"import _objectSpread from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import Service from'../service/service';var initialState={currentWeather:{name:'Chegem',description:null,temp:10,wind:0,humidity:0,pressure:0,icon:null,iconCode:'',id:null},searchedCities:window.localStorage.getItem('listOfCities')?JSON.parse(window.localStorage.getItem('listOfCities')):{},loading:false,alert:false,error:''};export var getWeatherThunk=createAsyncThunk('weather/getWeatherThunk',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:response=Service.getWeatherData(id);return _context.abrupt(\"return\",response);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());var weatherSlice=createSlice({name:'weather',initialState:initialState,reducers:{getWeather:function getWeather(state,action){state.currentWeather.name=action.payload.name;state.currentWeather.temp=action.payload.temp;},deleteCity:function deleteCity(state,action){delete state.searchedCities[action.payload];window.localStorage.setItem('listOfCities',JSON.stringify(state.searchedCities));console.log(state.searchedCities);}},extraReducers:function extraReducers(builder){builder.addCase(getWeatherThunk.pending,function(state,action){state.loading=true;}).addCase(getWeatherThunk.fulfilled,function(state,action){if(action.payload.cod==='400'){state.loading=false;state.alert=true;state.error='Пустой ввод. Пожалуйста введите название города для поиска.';return state;}if(action.payload.cod==='404'){state.loading=false;state.alert=true;state.error='Город не найден';return state;}if(action.payload.cod!=='400'){state.currentWeather=_objectSpread(_objectSpread({},state.currentWeather),{},{name:action.payload.name,temp:action.payload.main.temp,wind:action.payload.wind.speed,description:action.payload.weather[0].description,humidity:action.payload.main.humidity,pressure:action.payload.main.pressure,iconCode:action.payload.weather[0].icon,id:action.payload.id});// const temp = Math.floor(action.payload.main.temp - 273);\n// const name = action.payload.name;\n// const weather = action.payload.weather[0].description;\n// const wind = action.payload.wind.speed;\n// const humidity = action.payload.main.humidity;\n// const pressure = action.payload.main.pressure;\n// state.currentWeather['name'] = name;\n// state.currentWeather['temp'] = temp;\n// state.currentWeather['description'] = weather;\n// state.currentWeather['wind'] = wind;\n// state.currentWeather['humidity'] = humidity;\n// state.currentWeather['pressure'] = pressure;\n// state.searchedCities.unshift(state.currentWeather);\nstate.searchedCities[action.payload.id]=state.currentWeather;state.alert=false;localStorage.setItem('listOfCities',JSON.stringify(state.searchedCities));}state.loading=false;});}});var _weatherSlice$actions=weatherSlice.actions,getWeather=_weatherSlice$actions.getWeather,deleteCity=_weatherSlice$actions.deleteCity;export{getWeather,deleteCity};export default weatherSlice.reducer;","map":{"version":3,"sources":["C:/Users/RobertD/Desktop/MW Robert/weather-api/src/redux/reducer.js"],"names":["createAsyncThunk","createSlice","Service","initialState","currentWeather","name","description","temp","wind","humidity","pressure","icon","iconCode","id","searchedCities","window","localStorage","getItem","JSON","parse","loading","alert","error","getWeatherThunk","response","getWeatherData","weatherSlice","reducers","getWeather","state","action","payload","deleteCity","setItem","stringify","console","log","extraReducers","builder","addCase","pending","fulfilled","cod","main","speed","weather","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport Service from '../service/service';\r\n\r\nconst initialState = {\r\n  currentWeather: {\r\n    name: 'Chegem',\r\n    description: null,\r\n    temp: 10,\r\n    wind: 0,\r\n    humidity: 0,\r\n    pressure: 0,\r\n    icon: null,\r\n    iconCode: '',\r\n    id: null,\r\n  },\r\n  searchedCities: window.localStorage.getItem('listOfCities')\r\n    ? JSON.parse(window.localStorage.getItem('listOfCities'))\r\n    : {},\r\n  loading: false,\r\n  alert: false,\r\n  error: '',\r\n};\r\n\r\nexport const getWeatherThunk = createAsyncThunk(\r\n  'weather/getWeatherThunk',\r\n  async (id) => {\r\n    const response = Service.getWeatherData(id);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst weatherSlice = createSlice({\r\n  name: 'weather',\r\n  initialState,\r\n  reducers: {\r\n    getWeather(state, action) {\r\n      state.currentWeather.name = action.payload.name;\r\n      state.currentWeather.temp = action.payload.temp;\r\n    },\r\n    deleteCity(state, action) {\r\n      delete state.searchedCities[action.payload];\r\n      window.localStorage.setItem(\r\n        'listOfCities',\r\n        JSON.stringify(state.searchedCities)\r\n      );\r\n      console.log(state.searchedCities);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getWeatherThunk.pending, (state, action) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getWeatherThunk.fulfilled, (state, action) => {\r\n        if (action.payload.cod === '400') {\r\n          state.loading = false;\r\n          state.alert = true;\r\n          state.error =\r\n            'Пустой ввод. Пожалуйста введите название города для поиска.';\r\n\r\n          return state;\r\n        }\r\n\r\n        if (action.payload.cod === '404') {\r\n          state.loading = false;\r\n          state.alert = true;\r\n          state.error = 'Город не найден';\r\n\r\n          return state;\r\n        }\r\n\r\n        if (action.payload.cod !== '400') {\r\n          state.currentWeather = {\r\n            ...state.currentWeather,\r\n            name: action.payload.name,\r\n            temp: action.payload.main.temp,\r\n            wind: action.payload.wind.speed,\r\n            description: action.payload.weather[0].description,\r\n            humidity: action.payload.main.humidity,\r\n            pressure: action.payload.main.pressure,\r\n            iconCode: action.payload.weather[0].icon,\r\n            id: action.payload.id,\r\n          };\r\n          // const temp = Math.floor(action.payload.main.temp - 273);\r\n          // const name = action.payload.name;\r\n          // const weather = action.payload.weather[0].description;\r\n          // const wind = action.payload.wind.speed;\r\n          // const humidity = action.payload.main.humidity;\r\n          // const pressure = action.payload.main.pressure;\r\n          // state.currentWeather['name'] = name;\r\n          // state.currentWeather['temp'] = temp;\r\n          // state.currentWeather['description'] = weather;\r\n          // state.currentWeather['wind'] = wind;\r\n          // state.currentWeather['humidity'] = humidity;\r\n          // state.currentWeather['pressure'] = pressure;\r\n\r\n          // state.searchedCities.unshift(state.currentWeather);\r\n          state.searchedCities[action.payload.id] = state.currentWeather;\r\n\r\n          state.alert = false;\r\n\r\n          localStorage.setItem(\r\n            'listOfCities',\r\n            JSON.stringify(state.searchedCities)\r\n          );\r\n        }\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { getWeather, deleteCity } = weatherSlice.actions;\r\nexport default weatherSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}