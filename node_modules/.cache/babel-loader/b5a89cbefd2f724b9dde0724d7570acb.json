{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RobertD\\\\Desktop\\\\MW Robert\\\\weather-api\\\\src\\\\components\\\\SearchedCitiesList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { CityItem } from './CityItem';\nimport Loader from '../utils/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchedList = () => {\n  _s();\n\n  const list = useSelector(state => Object.values(state.reducer.searchedCities));\n  const loader = useSelector(state => state.reducer.loading);\n\n  if (loader) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!list || list.lenght === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row shadow-lg p-3 mb-5 rounded\",\n      children: list.reverse().map(i => {\n        return /*#__PURE__*/_jsxDEV(CityItem, {\n          name: i.name,\n          country: i.country,\n          date: i.date,\n          description: i.description,\n          temp: i.temp,\n          highestTemp: i.highestTemp,\n          lowestTemp: i.lowestTemp,\n          wind: i.wind,\n          humidity: i.humidity,\n          pressure: i.pressure,\n          icon: i.iconCode,\n          clouds: i.clouds,\n          sunrise: i.sunrise,\n          sunset: i.sunset,\n          id: i.id,\n          forecast: i.forecast\n        }, Math.random() * 100, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchedList, \"tVTzUTkFuJk7SXTaOkBsps/LUhc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = SearchedList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchedList\");","map":{"version":3,"sources":["C:/Users/RobertD/Desktop/MW Robert/weather-api/src/components/SearchedCitiesList.js"],"names":["useSelector","CityItem","Loader","SearchedList","list","state","Object","values","reducer","searchedCities","loader","loading","lenght","reverse","map","i","name","country","date","description","temp","highestTemp","lowestTemp","wind","humidity","pressure","iconCode","clouds","sunrise","sunset","id","forecast","Math","random"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IACvBC,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,OAAN,CAAcC,cAA5B,CADsB,CAAxB;AAGA,QAAMC,MAAM,GAAGV,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACG,OAAN,CAAcG,OAA1B,CAA1B;;AAEA,MAAID,MAAJ,EAAY;AACV,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACN,IAAD,IAASA,IAAI,CAACQ,MAAL,KAAgB,CAA7B,EAAgC;AAC9B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,gBACGR,IAAI,CAACS,OAAL,GAAeC,GAAf,CAAoBC,CAAD,IAAO;AACzB,4BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAEA,CAAC,CAACC,IADV;AAEE,UAAA,OAAO,EAAED,CAAC,CAACE,OAFb;AAGE,UAAA,IAAI,EAAEF,CAAC,CAACG,IAHV;AAIE,UAAA,WAAW,EAAEH,CAAC,CAACI,WAJjB;AAKE,UAAA,IAAI,EAAEJ,CAAC,CAACK,IALV;AAME,UAAA,WAAW,EAAEL,CAAC,CAACM,WANjB;AAOE,UAAA,UAAU,EAAEN,CAAC,CAACO,UAPhB;AAQE,UAAA,IAAI,EAAEP,CAAC,CAACQ,IARV;AASE,UAAA,QAAQ,EAAER,CAAC,CAACS,QATd;AAUE,UAAA,QAAQ,EAAET,CAAC,CAACU,QAVd;AAWE,UAAA,IAAI,EAAEV,CAAC,CAACW,QAXV;AAYE,UAAA,MAAM,EAAEX,CAAC,CAACY,MAZZ;AAaE,UAAA,OAAO,EAAEZ,CAAC,CAACa,OAbb;AAcE,UAAA,MAAM,EAAEb,CAAC,CAACc,MAdZ;AAeE,UAAA,EAAE,EAAEd,CAAC,CAACe,EAfR;AAgBE,UAAA,QAAQ,EAAEf,CAAC,CAACgB;AAhBd,WAiBOC,IAAI,CAACC,MAAL,KAAgB,GAjBvB;AAAA;AAAA;AAAA;AAAA,gBADF;AAqBD,OAtBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA1CM;;GAAM9B,Y;UACEH,W,EAGEA,W;;;KAJJG,Y","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { CityItem } from './CityItem';\r\nimport Loader from '../utils/Loader';\r\n\r\nexport const SearchedList = () => {\r\n  const list = useSelector((state) =>\r\n    Object.values(state.reducer.searchedCities)\r\n  );\r\n  const loader = useSelector((state) => state.reducer.loading);\r\n\r\n  if (loader) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (!list || list.lenght === 0) {\r\n    return <h2>No data</h2>;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row shadow-lg p-3 mb-5 rounded\">\r\n        {list.reverse().map((i) => {\r\n          return (\r\n            <CityItem\r\n              name={i.name}\r\n              country={i.country}\r\n              date={i.date}\r\n              description={i.description}\r\n              temp={i.temp}\r\n              highestTemp={i.highestTemp}\r\n              lowestTemp={i.lowestTemp}\r\n              wind={i.wind}\r\n              humidity={i.humidity}\r\n              pressure={i.pressure}\r\n              icon={i.iconCode}\r\n              clouds={i.clouds}\r\n              sunrise={i.sunrise}\r\n              sunset={i.sunset}\r\n              id={i.id}\r\n              forecast={i.forecast}\r\n              key={Math.random() * 100}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}