{"ast":null,"code":"class Service {\n  static async getWeatherData(id) {\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\n    const response = await Promise.all([fetch(weather), fetch(forecast)]); // const response = await fetch(\n    //   `https://api.openweathermap.org/data/2.5/weather?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`\n    // );\n\n    try {\n      const [res1, res2] = response;\n\n      if (res1.ok && res2.ok) {\n        return Promise.all([res1.json(), res2.json()]);\n      }\n    } catch {\n      return 'Not found';\n    }\n  }\n\n}\n\nexport default Service;","map":{"version":3,"sources":["C:/Users/RobertD/Desktop/MW Robert/weather-api/src/service/service.js"],"names":["Service","getWeatherData","id","weather","forecast","response","Promise","all","fetch","res1","res2","ok","json"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AACe,eAAdC,cAAc,CAACC,EAAD,EAAK;AAC9B,UAAMC,OAAO,GAAI,qDAAoDD,EAAG,8DAAxE;AACA,UAAME,QAAQ,GAAI,sDAAqDF,EAAG,8DAA1E;AAEA,UAAMG,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CAACC,KAAK,CAACL,OAAD,CAAN,EAAiBK,KAAK,CAACJ,QAAD,CAAtB,CAAZ,CAAvB,CAJ8B,CAK9B;AACA;AACA;;AACA,QAAI;AACF,YAAM,CAACK,IAAD,EAAOC,IAAP,IAAeL,QAArB;;AACA,UAAII,IAAI,CAACE,EAAL,IAAWD,IAAI,CAACC,EAApB,EAAwB;AACtB,eAAOL,OAAO,CAACC,GAAR,CAAY,CAACE,IAAI,CAACG,IAAL,EAAD,EAAcF,IAAI,CAACE,IAAL,EAAd,CAAZ,CAAP;AACD;AACF,KALD,CAKE,MAAM;AACN,aAAO,WAAP;AACD;AACF;;AAjBW;;AAoBd,eAAeZ,OAAf","sourcesContent":["class Service {\r\n  static async getWeatherData(id) {\r\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\r\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\r\n\r\n    const response = await Promise.all([fetch(weather), fetch(forecast)]);\r\n    // const response = await fetch(\r\n    //   `https://api.openweathermap.org/data/2.5/weather?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`\r\n    // );\r\n    try {\r\n      const [res1, res2] = response;\r\n      if (res1.ok && res2.ok) {\r\n        return Promise.all([res1.json(), res2.json()]);\r\n      }\r\n    } catch {\r\n      return 'Not found';\r\n    }\r\n  }\r\n}\r\n\r\nexport default Service;\r\n"]},"metadata":{},"sourceType":"module"}