{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport Service from '../service/service';\nconst initialState = {\n  currentWeather: {\n    name: 'Chegem',\n    description: null,\n    temp: 10,\n    wind: 0,\n    humidity: 0,\n    pressure: 0\n  },\n  searchedCities: window.localStorage.getItem('listOfCities') ? JSON.parse(window.localStorage.getItem('listOfCities')) : [],\n  loading: false,\n  error: false\n};\nexport const getWeatherThunk = createAsyncThunk('weather/getWeatherThunk', async id => {\n  const response = Service.getWeatherData(id);\n  console.log(response);\n  return response;\n});\nconst weatherSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    getWeather(state, action) {\n      state.currentWeather.name = action.payload.name;\n      state.currentWeather.temp = action.payload.temp;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(getWeatherThunk.pending, (state, action) => {\n      state.loading = true;\n      console.log(state);\n    }).addCase(getWeatherThunk.fulfilled, (state, action) => {\n      console.log(action);\n\n      if (action.payload.cod === '400') {\n        state.loading = false;\n        state.error = true;\n        return state;\n      }\n\n      if (action.payload.cod !== '400') {\n        const temp = Math.floor(action.payload.main.temp - 273);\n        const name = action.payload.name;\n        const weather = action.payload.weather[0].description;\n        const wind = action.payload.wind.speed;\n        const humidity = action.payload.main.humidity;\n        const pressure = action.payload.main.pressure;\n        state.currentWeather['name'] = name;\n        state.currentWeather['temp'] = temp;\n        state.currentWeather['description'] = weather;\n        state.currentWeather['wind'] = wind;\n        state.currentWeather['humidity'] = humidity;\n        state.currentWeather['pressure'] = pressure;\n        state.searchedCities.unshift(state.currentWeather);\n        state.error = false;\n        localStorage.setItem('listOfCities', JSON.stringify(state.searchedCities));\n      }\n\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  getWeather\n} = weatherSlice.actions;\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["C:/Users/RobertD/Desktop/MW Robert/weather-api/src/redux/reducer.js"],"names":["createAsyncThunk","createSlice","Service","initialState","currentWeather","name","description","temp","wind","humidity","pressure","searchedCities","window","localStorage","getItem","JSON","parse","loading","error","getWeatherThunk","id","response","getWeatherData","console","log","weatherSlice","reducers","getWeather","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","cod","Math","floor","main","weather","speed","unshift","setItem","stringify","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,IAAI,EAAE,QADQ;AAEdC,IAAAA,WAAW,EAAE,IAFC;AAGdC,IAAAA,IAAI,EAAE,EAHQ;AAIdC,IAAAA,IAAI,EAAE,CAJQ;AAKdC,IAAAA,QAAQ,EAAE,CALI;AAMdC,IAAAA,QAAQ,EAAE;AANI,GADG;AASnBC,EAAAA,cAAc,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,IACZC,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAAX,CADY,GAEZ,EAXe;AAYnBG,EAAAA,OAAO,EAAE,KAZU;AAanBC,EAAAA,KAAK,EAAE;AAbY,CAArB;AAgBA,OAAO,MAAMC,eAAe,GAAGnB,gBAAgB,CAC7C,yBAD6C,EAE7C,MAAOoB,EAAP,IAAc;AACZ,QAAMC,QAAQ,GAAGnB,OAAO,CAACoB,cAAR,CAAuBF,EAAvB,CAAjB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAOA,QAAP;AACD,CAN4C,CAAxC;AASP,MAAMI,YAAY,GAAGxB,WAAW,CAAC;AAC/BI,EAAAA,IAAI,EAAE,SADyB;AAE/BF,EAAAA,YAF+B;AAG/BuB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACxB,cAAN,CAAqBC,IAArB,GAA4BwB,MAAM,CAACC,OAAP,CAAezB,IAA3C;AACAuB,MAAAA,KAAK,CAACxB,cAAN,CAAqBG,IAArB,GAA4BsB,MAAM,CAACC,OAAP,CAAevB,IAA3C;AACD;;AAJO,GAHqB;AAS/BwB,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWd,eAAe,CAACe,OAD3B,EACoC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACnDD,MAAAA,KAAK,CAACX,OAAN,GAAgB,IAAhB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAJH,EAKGK,OALH,CAKWd,eAAe,CAACgB,SAL3B,EAKsC,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACrDN,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;;AACA,UAAIA,MAAM,CAACC,OAAP,CAAeM,GAAf,KAAuB,KAA3B,EAAkC;AAChCR,QAAAA,KAAK,CAACX,OAAN,GAAgB,KAAhB;AACAW,QAAAA,KAAK,CAACV,KAAN,GAAc,IAAd;AACA,eAAOU,KAAP;AACD;;AAED,UAAIC,MAAM,CAACC,OAAP,CAAeM,GAAf,KAAuB,KAA3B,EAAkC;AAChC,cAAM7B,IAAI,GAAG8B,IAAI,CAACC,KAAL,CAAWT,MAAM,CAACC,OAAP,CAAeS,IAAf,CAAoBhC,IAApB,GAA2B,GAAtC,CAAb;AACA,cAAMF,IAAI,GAAGwB,MAAM,CAACC,OAAP,CAAezB,IAA5B;AACA,cAAMmC,OAAO,GAAGX,MAAM,CAACC,OAAP,CAAeU,OAAf,CAAuB,CAAvB,EAA0BlC,WAA1C;AACA,cAAME,IAAI,GAAGqB,MAAM,CAACC,OAAP,CAAetB,IAAf,CAAoBiC,KAAjC;AACA,cAAMhC,QAAQ,GAAGoB,MAAM,CAACC,OAAP,CAAeS,IAAf,CAAoB9B,QAArC;AACA,cAAMC,QAAQ,GAAGmB,MAAM,CAACC,OAAP,CAAeS,IAAf,CAAoB7B,QAArC;AAEAkB,QAAAA,KAAK,CAACxB,cAAN,CAAqB,MAArB,IAA+BC,IAA/B;AACAuB,QAAAA,KAAK,CAACxB,cAAN,CAAqB,MAArB,IAA+BG,IAA/B;AACAqB,QAAAA,KAAK,CAACxB,cAAN,CAAqB,aAArB,IAAsCoC,OAAtC;AACAZ,QAAAA,KAAK,CAACxB,cAAN,CAAqB,MAArB,IAA+BI,IAA/B;AACAoB,QAAAA,KAAK,CAACxB,cAAN,CAAqB,UAArB,IAAmCK,QAAnC;AACAmB,QAAAA,KAAK,CAACxB,cAAN,CAAqB,UAArB,IAAmCM,QAAnC;AAEAkB,QAAAA,KAAK,CAACjB,cAAN,CAAqB+B,OAArB,CAA6Bd,KAAK,CAACxB,cAAnC;AAEAwB,QAAAA,KAAK,CAACV,KAAN,GAAc,KAAd;AAEAL,QAAAA,YAAY,CAAC8B,OAAb,CACE,cADF,EAEE5B,IAAI,CAAC6B,SAAL,CAAehB,KAAK,CAACjB,cAArB,CAFF;AAID;;AACDiB,MAAAA,KAAK,CAACX,OAAN,GAAgB,KAAhB;AACD,KAtCH;AAuCD;AAjD8B,CAAD,CAAhC;AAoDA,OAAO,MAAM;AAAEU,EAAAA;AAAF,IAAiBF,YAAY,CAACoB,OAApC;AACP,eAAepB,YAAY,CAACqB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport Service from '../service/service';\r\n\r\nconst initialState = {\r\n  currentWeather: {\r\n    name: 'Chegem',\r\n    description: null,\r\n    temp: 10,\r\n    wind: 0,\r\n    humidity: 0,\r\n    pressure: 0,\r\n  },\r\n  searchedCities: window.localStorage.getItem('listOfCities')\r\n    ? JSON.parse(window.localStorage.getItem('listOfCities'))\r\n    : [],\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nexport const getWeatherThunk = createAsyncThunk(\r\n  'weather/getWeatherThunk',\r\n  async (id) => {\r\n    const response = Service.getWeatherData(id);\r\n    console.log(response);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst weatherSlice = createSlice({\r\n  name: 'weather',\r\n  initialState,\r\n  reducers: {\r\n    getWeather(state, action) {\r\n      state.currentWeather.name = action.payload.name;\r\n      state.currentWeather.temp = action.payload.temp;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getWeatherThunk.pending, (state, action) => {\r\n        state.loading = true;\r\n        console.log(state);\r\n      })\r\n      .addCase(getWeatherThunk.fulfilled, (state, action) => {\r\n        console.log(action);\r\n        if (action.payload.cod === '400') {\r\n          state.loading = false;\r\n          state.error = true;\r\n          return state;\r\n        }\r\n\r\n        if (action.payload.cod !== '400') {\r\n          const temp = Math.floor(action.payload.main.temp - 273);\r\n          const name = action.payload.name;\r\n          const weather = action.payload.weather[0].description;\r\n          const wind = action.payload.wind.speed;\r\n          const humidity = action.payload.main.humidity;\r\n          const pressure = action.payload.main.pressure;\r\n\r\n          state.currentWeather['name'] = name;\r\n          state.currentWeather['temp'] = temp;\r\n          state.currentWeather['description'] = weather;\r\n          state.currentWeather['wind'] = wind;\r\n          state.currentWeather['humidity'] = humidity;\r\n          state.currentWeather['pressure'] = pressure;\r\n\r\n          state.searchedCities.unshift(state.currentWeather);\r\n\r\n          state.error = false;\r\n\r\n          localStorage.setItem(\r\n            'listOfCities',\r\n            JSON.stringify(state.searchedCities)\r\n          );\r\n        }\r\n        state.loading = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { getWeather } = weatherSlice.actions;\r\nexport default weatherSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}