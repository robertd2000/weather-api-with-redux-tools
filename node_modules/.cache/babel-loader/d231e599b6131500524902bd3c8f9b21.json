{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/RobertD/Desktop/MW Robert/weather-api/node_modules/@babel/runtime/helpers/esm/createClass\";var Service=/*#__PURE__*/function(){function Service(){_classCallCheck(this,Service);}_createClass(Service,null,[{key:\"getWeatherData\",value:function(){var _getWeatherData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var weather,forecast,response,_response,res1,res2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:weather=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(id,\"&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric\");forecast=\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(id,\"&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric\");_context.next=4;return Promise.all([fetch(weather),fetch(forecast)]);case 4:response=_context.sent;_context.prev=5;_response=_slicedToArray(response,2),res1=_response[0],res2=_response[1];if(!(res1.ok&&res2.ok)){_context.next=9;break;}return _context.abrupt(\"return\",Promise.all([res1.json(),res2.json()]));case 9:_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](5);return _context.abrupt(\"return\",'Not found');case 14:case\"end\":return _context.stop();}}},_callee,null,[[5,11]]);}));function getWeatherData(_x){return _getWeatherData.apply(this,arguments);}return getWeatherData;}()}]);return Service;}();export default Service;","map":{"version":3,"sources":["C:/Users/RobertD/Desktop/MW Robert/weather-api/src/service/service.js"],"names":["Service","id","weather","forecast","Promise","all","fetch","response","res1","res2","ok","json"],"mappings":"moBAAMA,CAAAA,O,yNACJ,iBAA4BC,EAA5B,oKACQC,OADR,6DACuED,EADvE,iEAEQE,QAFR,8DAEyEF,EAFzE,uFAIyBG,CAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,KAAK,CAACJ,OAAD,CAAN,CAAiBI,KAAK,CAACH,QAAD,CAAtB,CAAZ,CAJzB,QAIQI,QAJR,wDAOyBA,QAPzB,IAOWC,IAPX,cAOiBC,IAPjB,mBAQQD,IAAI,CAACE,EAAL,EAAWD,IAAI,CAACC,EARxB,0DASaN,OAAO,CAACC,GAAR,CAAY,CAACG,IAAI,CAACG,IAAL,EAAD,CAAcF,IAAI,CAACE,IAAL,EAAd,CAAZ,CATb,0HAYW,WAZX,uE,6HAiBF,cAAeX,CAAAA,OAAf","sourcesContent":["class Service {\r\n  static async getWeatherData(id) {\r\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\r\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${id}&lang=ru&appid=a9ebdb68b0dbf40182f5638efcca3afd&units=metric`;\r\n\r\n    const response = await Promise.all([fetch(weather), fetch(forecast)]);\r\n\r\n    try {\r\n      const [res1, res2] = response;\r\n      if (res1.ok && res2.ok) {\r\n        return Promise.all([res1.json(), res2.json()]);\r\n      }\r\n    } catch {\r\n      return 'Not found';\r\n    }\r\n  }\r\n}\r\n\r\nexport default Service;\r\n"]},"metadata":{},"sourceType":"module"}