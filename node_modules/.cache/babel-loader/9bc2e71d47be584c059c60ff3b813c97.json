{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport Service from '../service/service';\nconst initialState = {\n  currentWeather: {\n    description: 'Chegem',\n    temp: 10\n  }\n};\nexport const getWeatherThunk = createAsyncThunk('weather/getWeatherThunk', async id => {\n  const response = Service.getWeatherData(id);\n  return response;\n});\nconst weatherSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    getWeather(state, action) {\n      state.currentWeather.description = action.payload.description;\n      state.currentWeather.temp = action.payload.temp;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(getWeatherThunk.fulfilled, (state, action) => {\n      state.currentWeather.description = action.payload.description;\n    });\n  }\n});\nexport const {\n  getWeather\n} = weatherSlice.actions;\nexport default weatherSlice.reducer;","map":{"version":3,"sources":["C:/Users/RobertD/Desktop/MW Robert/weather-api/src/redux/reducer.js"],"names":["createAsyncThunk","createSlice","Service","initialState","currentWeather","description","temp","getWeatherThunk","id","response","getWeatherData","weatherSlice","name","reducers","getWeather","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,WAAW,EAAE,QADC;AAEdC,IAAAA,IAAI,EAAE;AAFQ;AADG,CAArB;AAOA,OAAO,MAAMC,eAAe,GAAGP,gBAAgB,CAC7C,yBAD6C,EAE7C,MAAOQ,EAAP,IAAc;AACZ,QAAMC,QAAQ,GAAGP,OAAO,CAACQ,cAAR,CAAuBF,EAAvB,CAAjB;AACA,SAAOC,QAAP;AACD,CAL4C,CAAxC;AAQP,MAAME,YAAY,GAAGV,WAAW,CAAC;AAC/BW,EAAAA,IAAI,EAAE,SADyB;AAE/BT,EAAAA,YAF+B;AAG/BU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACX,cAAN,CAAqBC,WAArB,GAAmCW,MAAM,CAACC,OAAP,CAAeZ,WAAlD;AACAU,MAAAA,KAAK,CAACX,cAAN,CAAqBE,IAArB,GAA4BU,MAAM,CAACC,OAAP,CAAeX,IAA3C;AACD;;AAJO,GAHqB;AAS/BY,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,eAAe,CAACc,SAAhC,EAA2C,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC5DD,MAAAA,KAAK,CAACX,cAAN,CAAqBC,WAArB,GAAmCW,MAAM,CAACC,OAAP,CAAeZ,WAAlD;AACD,KAFD;AAGD;AAb8B,CAAD,CAAhC;AAgBA,OAAO,MAAM;AAAES,EAAAA;AAAF,IAAiBH,YAAY,CAACW,OAApC;AACP,eAAeX,YAAY,CAACY,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport Service from '../service/service';\r\n\r\nconst initialState = {\r\n  currentWeather: {\r\n    description: 'Chegem',\r\n    temp: 10,\r\n  },\r\n};\r\n\r\nexport const getWeatherThunk = createAsyncThunk(\r\n  'weather/getWeatherThunk',\r\n  async (id) => {\r\n    const response = Service.getWeatherData(id);\r\n    return response;\r\n  }\r\n);\r\n\r\nconst weatherSlice = createSlice({\r\n  name: 'weather',\r\n  initialState,\r\n  reducers: {\r\n    getWeather(state, action) {\r\n      state.currentWeather.description = action.payload.description;\r\n      state.currentWeather.temp = action.payload.temp;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getWeatherThunk.fulfilled, (state, action) => {\r\n      state.currentWeather.description = action.payload.description;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { getWeather } = weatherSlice.actions;\r\nexport default weatherSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}